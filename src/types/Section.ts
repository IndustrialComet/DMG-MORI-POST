declare class Section {
	getId(): Integer;
	//PostPropertyMap::getOperationProperties(): PropertyMap;
	//optional< String > 	getStrategy ()
	getnumberOfRecords(): Integer;
	getRecord(id: Integer): Record;
	getJobId(): Integer;
	getPatternId(): Integer;
	getnumberOfPatternInstances(): Integer;
	isPatterned(): boolean;
	getChannel(): Integer;
	getForceToolChange(): boolean;
	isOptional(): boolean;
	getFirstCompensationOffset(): Integer;
	getTool(): Tool;
	getContent(): Integer;
	isMultiAxis(): boolean;
	getUnit(): Integer;
	getType(): Integer;
	getQuality(): Integer;
	getJetMode(): Integer;
	getTailstock(): boolean;
	getPartCatcher(): boolean;
	getSpindle(): Integer;
	getFeedMode(): Integer;
	getToolOrientation(): number;
	getWorkOrigin(): Vector;
	getWorkPlane(): Matrix;
	isXOriented(): boolean;
	isYOriented(): boolean;
	isZOriented(): boolean;
	isTopWorkPlane(): boolean;
	getGlobalWorkOrigin(): Vector;
	getGlobalWorkPlane(): Matrix;
	getToolAxis(): Integer;
	getWCSOrigin(): Vector;
	getWCSPlane(): Matrix;
	getDynamicWCSOrigin(): Vector;
	getDynamicWCSPlane(): Matrix;
	getFCSOrigin(): Vector;
	getFCSPlane(): Matrix;
	getModelOrigin(): Vector;
	getModelPlane(): Matrix;
	getWorkOffset(): Integer;
	getProbeWorkOffset(): Integer;
	getWCS(): String;
	getWCSIndex(): Integer;
	hasDynamicWorkOffset(): boolean;
	getDynamicWorkOffset(): Integer;
	getAxisSubstitution(): boolean;
	getAxisSubstitutionRadius(): number;
	getGlobalPosition(Vector p): Vector;
	getWCSPosition(Vector p): Vector;
	getSectionPosition(Vector p): Vector;
	getMaximumSpindleSpeed(): number;
	getMaximumFeedrate(): number;
	getCuttingDistance(): number;
	getRapidDistance(): number;
	getMovements(): Integer;
	getCycleTime(): number;
	getnumberOfCyclePoints(): Integer;
	getZRange(): Range;
	getGlobalZRange(): Range;
	getGlobalRange(Vector direction): Range;
	getBoundingBox(): BoundingBox;
	getGlobalBoundingBox(): BoundingBox;
	getOptimizedBoundingBox(MachineConfiguration machine, Vector abc): BoundingBox;
	isCuttingMotionAwayFromRotary(number distance, number tolerance): boolean;
	hasWellDefinedPosition(): boolean;
	getFirstPosition(): Vector;
	getInitialPosition(): Vector;
	getFinalPosition(): Vector;
	getInitialToolAxis(): Vector;
	getGlobalInitialToolAxis(): Vector;
	getInitialToolAxisABC(): Vector;
	getFinalToolAxis(): Vector;
	getFinalToolAxisABC(): Vector;
	getGlobalFinalToolAxis(): Vector;
	getInitialSpindleOn(): boolean;
	getInitialSpindleSpeed(): number;
	getFinalSpindleOn(): boolean;
	getFinalSpindleSpeed(): number;
	getMaximumTilt(): number;
	getLowerToolAxisABC(): Vector;
	getUpperToolAxisABC(): Vector;
	isOptimizedForMachine(): boolean;
	getOptimizedTCPMode(): Integer;
	hasParameter(String name): boolean;
	getParameter(String name, Value defaultValue): Value;
	hasCycle(String uri): boolean;
	hasAnyCycle(): boolean;
	getnumberOfCyclesWithId(String uri): Integer;
	getnumberOfCycles(): Integer;
	getCycleId(Integer index): String;
	getFirstCycle(): String;
	getLastCycle(): String;
	doesStartWithCycle(String uri): boolean;
	boolean 	doesEndWithCycle (String &_uri) noexcept
	doesStartWithCycleIgnoringPositioning(String uri): boolean;
	doesEndWithCycleIgnoringPositioning(String uri): boolean;
	doesStrictCycle(String uri): boolean;
	hasCycleParameter(Integer index, String name): boolean;
	getCycleParameter(Integer index, String name): Value;
	 	optimizeMachineAnglesByMachine (MachineConfiguration machine, Integer optimizeType)
	 	optimize3DPositionsByMachine (MachineConfiguration machine, Vector abc, Integer optimizeType)
	getABCByPreference(MachineConfiguration machine, Matrix orientation, Vector current, Integer controllingAxis, Integer type, Integer options): Vector;
	doesToolpathFitWithinLimits(MachineConfiguration machine, Vector current): boolean;
	checkGroup(Integer groups): boolean;
}
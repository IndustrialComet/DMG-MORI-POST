export declare class MachineConfiguration {
	getXML(): String;
	MachineConfiguration(): void;
	MachineConfiguration(u: Axis): void;
	MachineConfiguration(u: Axis,v: Axis): void;
	MachineConfiguration(u: Axis,v: Axis,w: Axis): void;
	getMilling(): boolean;
	setMilling(milling: boolean): void;
	getTurning(): boolean;
	setTurning(turning: boolean): void;
	getWire(): boolean;
	setWire(wire: boolean): void;
	getJet(): boolean;
	setJet(jet: boolean): void;
	getAdditiveFFF(): boolean;
	setAdditiveFFF(additive: boolean): void;
	getInspection(): boolean;
	setInspection(inspection: boolean): void;
	getToolChanger(): boolean;
	setToolChanger(toolChanger: boolean): void;
	getToolPreload(): boolean;
	setToolPreload(toolPreload: boolean): void;
	getnumberOfTools(): Integer;
	setnumberOfTools(numberOfTools: Integer): void;
	getMaximumToolLength(): number;
	setMaximumToolLength(maximumToolLength: number): void;
	getMaximumToolDiameter(): number;
	setMaximumToolDiameter(maximumToolDiameter: number): void;
	getMaximumToolWeight(): number;
	setMaximumToolWeight(maximumToolWeight: number): void;
	getMaximumFeedrate(): number;
	setMaximumFeedrate(maximumFeedrate: number): void;
	getMaximumCuttingFeedrate(): number;
	setMaximumCuttingFeedrate(maximumCuttingFeedrate: number): void;
	getMaximumBlockProcessingSpeed(): Integer;
	setMaximumBlockProcessingSpeed(maximumBlockProcessingSpeed: Integer): void;
	getnumberOfWorkOffsets(): Integer;
	setnumberOfWorkOffsets(numberOfWorkOffsets: Integer): void;
	getFeedrateRatio(): number;
	setFeedrateRatio(feedrateRatio: number): void;
	getToolChangeTime(): number;
	setToolChangeTime(toolChangeTime: number): void;
	addAxis(axis: Axis): void;
	performRewinds(): boolean;
	enableMachineRewinds(): void;
	disableMachineRewinds(): void;
	getReconfigure(): boolean;
	setReconfigure(enable: boolean): void;
	setRewindStockExpansion(expansion: Vector): void;
	getRewindStockExpansion(): Vector;
	setSafeRetractDistance(safeRetractDistance: number): void;
	getSafeRetractDistance(): number;
	setSafeRetractFeedrate(safeRetractFeedrate: number): void;
	getSafeRetractFeedrate(): number;
	setSafePlungeFeedrate(safePlungeFeedrate: number): void;
	getSafePlungeFeedrate(): number;
	getDimensions(): Vector;
	setDimensions(dimensions: Vector): void;
	getWidth(): number;
	setWidth(width: number): void;
	getDepth(): number;
	setDepth(depth: number): void;
	getHeight(): number;
	setHeight(height: number): void;
	getWeight(): number;
	setWeight(weight: number): void;
	getPartDimensions(): Vector;
	setPartDimensions(partDimensions: Vector): void;
	getPartMaximumX(): number;
	setPartMaximumX(width: number): void;
	getPartMaximumY(): number;
	setPartMaximumY(depth: number): void;
	getPartMaximumZ(): number;
	setPartMaximumZ(height: number): void;
	getWeightCapacity(): number;
	setWeightCapacity(weightCapacity: number): void;
	getSpindleAxis(): Vector;
	setSpindleAxis(spindleAxis: Vector): void;
	getSpindleDescription(): String;
	setSpindleDescription(spindleDescription: String): void;
	getMaximumSpindlePower(): number;
	setMaximumSpindlePower(maximumSpindlePower: number): void;
	getMaximumSpindleSpeed(): number;
	setMaximumSpindleSpeed(maximumSpindleSpeed: number): void;
	getCollectChuck(): String;
	setCollectChuck(collectChuck: String): void;
	getToolLength(): number;
	setToolLength(toolLength: number): void;
	getVirtualTooltip(): boolean;
	setVirtualTooltip(virtualPositioning: boolean): void;
	getAxisByName(name: String): Axis;
	getAxisX(): Axis;
	getAxisY(): Axis;
	getAxisZ(): Axis;
	isSupportedPosition(position: Vector): boolean;
	getValidityStatus(): Integer;
	isSupported(): boolean;
	setMultiAxisFeedrate(feedMode: Integer,maximumFeedrate: number,feedType: Integer,outputTolerance: number,bpwRatio: number): void;
	getMultiAxisFeedrateMode(): Integer;
	getMultiAxisFeedrateMaximum(): number;
	getMultiAxisFeedrateDPMType(): Integer;
	getMultiAxisFeedrateInverseTimeUnits(): Integer;
	getMultiAxisFeedrateOutputTolerance(): number;
	getMultiAxisFeedrateBpwRatio(): number;
	setSingularity(adjust: boolean,method: Integer,cone: number,angle: number,tolerance: number,linearizationTolerance: number): void;
	getSingularityAdjust(): boolean;
	getSingularityMethod(): Integer;
	getSingularityCone(): number;
	getSingularityAngle(): number;
	getSingularityTolerance(): number;
	getSingularityLinearizationTolerance(): number;
	isMachineAxisRotation(abc: Vector): boolean;
	booleanis3DConfiguration(): void;
	isMultiAxisConfiguration(): boolean;
	getnumberOfAxes(): Integer;
	isHeadConfiguration(): boolean;
	isTableConfiguration(): boolean;
	getAxisU(): Axis;
	getAxisV(): Axis;
	getAxisW(): Axis;
	getIndexOfAxisById(id: AxisId): Integer;
	isMachineCoordinate(coordinate: Integer): boolean;
	getAxisByCoordinate(coordinate: Integer): Axis;
	Vectorclamp (Vector _abc)
	VectorclampToResolution (Vector _abc)
	getRotationAxis(axis: Axis): Vector;
	preserveRotaryAtZero(currentDirection: Vector,previousABC: Vector,currentABC: Vector): Vector;
	getClosestABC(current: Vector,abc: Vector): Vector;
	booleanisXYZSupported (Vector _xyz)
	booleanisABCSupported (Vector _abc)
	isDirectionSupported(direction: Vector): boolean;
	getOptimizedPosition(currentXYZ: Vector,currentABC: Vector,tcpType: Integer,optimizeType: Integer,forceAdjustment: boolean): Vector;
	getOptimizedDirection(direction: Vector,currentABC: Vector,reverse: boolean,forceAdjustment: boolean): Vector;
	getOptimizedTables(currentXYZ: Vector,currentABC: Vector,reverse: boolean,optimizeType: Integer,isVector: boolean,forceAdjustment: boolean): Vector;
	getOptimizedHeads(currentXYZ: Vector,currentABC: Vector,reverse: boolean,optimizeType: Integer,forceAdjustment: boolean,pivotPoint: boolean): Vector;
	getABC(orientation: Matrix): Vector;
	getABCByDirectionBoth(direction: Vector): VectorPair;
	getABCByDirection(direction: Vector): Vector;
	VectorgetABCByDirection2 (direction: Vector)
	getABCByPreference(orientation: Matrix,current: Vector,controllingAxis: Integer,type: Integer,options: Integer): Vector;
	getOtherABCByDirection(abc: Vector): Vector;
	getPreferredABC(abc: Vector): Vector;
	remapABC(abc: Vector): Vector;
	remapToABC(abc: Vector,current: Vector): Vector;
	getCoordinates(): Integer;
	getPosition(p: Vector,abc: Vector): Vector;
	getDirection(abc: Vector): Vector;
	getHeadABC(abc: Vector): Vector;
	getTableABC(abc: Vector): Vector;
	getHeadOrientation(abc: Vector): Matrix;
	getTableOrientation(abc: Vector): Matrix;
	getOrientation(abc: Vector): Matrix;
	getOrientationABC(abc: Vector): Matrix;
	getSpindleAxisABC(abc: Vector): Vector;
	getRemainingOrientation(abc: Vector,desired: Matrix): Matrix;
	getRemainingOrientationABC(abc: Vector,desired: Matrix): Matrix;
	getRetractPlane(): number;
	setRetractPlane(retractPlane: number): void;
	hasHomePositionX(): boolean;
	getHomePositionX(): number;
	setHomePositionX(x: number): void;
	hasHomePositionY(): boolean;
	getHomePositionY(): number;
	setHomePositionY(y: number): void;
	hasHomePositionZ(): boolean;
	getHomePositionZ(): number;
	setHomePositionZ(z: number): void;
	hasCenterPosition(): boolean;
	getCenterPositionX(): number;
	setCenterPositionX(x: number): void;
	getCenterPositionY(): number;
	setCenterPositionY(y: number): void;
	getCenterPositionZ(): number;
	setCenterPositionZ(z: number): void;
	hasParkPosition(): boolean;
	getParkPositionX(): number;
	setParkPositionX(x: number): void;
	getParkPositionY(): number;
	setParkPositionY(y: number): void;
	getParkPositionZ(): number;
	setParkPositionZ(z: number): void;
	getnumberExtruders(): Integer;
	setnumberExtruders(num: Integer): void;
	getExtruderOffsetX(extruderNo: Integer): number;
	setExtruderOffsetX(extruderNo: Integer,x: number): void;
	getExtruderOffsetY(extruderNo: Integer): number;
	setExtruderOffsetY(extruderNo: Integer,y: number): void;
	getExtruderOffsetZ(extruderNo: Integer): number;
	setExtruderOffsetZ(extruderNo: Integer,z: number): void;
	getModel(): String;
	setModel(model: String): void;
	getDescription(): String;
	setDescription(description: String): void;
	getVendor(): String;
	setVendor(vendor: String): void;
	getVendorUrl(): String;
	setVendorUrl(vendorUrl: String): void;
	getControl(): String;
	setControl(control: String): void;
	isCoolantSupported(coolant: Integer): boolean;
	setCoolantSupported(coolant: Integer,available: boolean): void;
	getRetractOnIndexing(): boolean;
	setRetractOnIndexing(retractOnIndexing: boolean): void;
	getShortestAngularRotation(): boolean;
	setShortestAngularRotation(shortestAngularRotation: boolean): void;
	isReceived(): boolean;
	setIsReceived(received: boolean): void;
	Sets m_isReceived. (hidden)
	static getAsSpatial(text: String): number;
	static getAsSpatialFeedrate(text: String): number;
	static getAsAngularFeedrate(text: String): number;
	static getAsWeight(text: String): number;
	static getAsPower(text: String): number;
	static getAsAngular(text: String): number;
	static getAsTime(text: String): number;
	static createFromXML(xml: String): MachineConfiguration;
	static createFromPath(path: String): MachineConfiguration;
	static getStatusDescription(status: Integer): String;
}

